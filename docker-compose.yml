services:
  postgres:
    image: postgres:18
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: shop
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d shop"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 3s

  keycloak-db:
    image: postgres:18
    container_name: keycloak-db
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    volumes:
      - keycloak_data:/var/lib/postgresql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak -d keycloak"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s

  keycloak:
    image: quay.io/keycloak/keycloak:26.0
    container_name: keycloak
    command: start-dev --import-realm
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin

      KC_DB: postgres
      KC_DB_URL_HOST: keycloak-db   
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak

      KC_HOSTNAME: localhost
      KC_PROXY: edge
    ports:
      - "8080:8080"
    depends_on:
      keycloak-db:
        condition: service_healthy
    volumes:
      - ./shop-realm.json:/opt/keycloak/data/import/shop-realm.json

      
  monolith-api:
    build: .
    ports:
      - "4000:4000"
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: app
      DB_PASSWORD: app
      DB_DATABASE: shop
      REDIS_HOST: redis
      REDIS_PORT: 6379
      KEYCLOAK_BASE_URL: http://keycloak:8080/
      KEYCLOAK_REALM: shop
      KEYCLOAK_CLIENT_ID: monolith-api
      KEYCLOAK_CLIENT_SECRET: nonDohtDwCWJAy5IUSszZ7Ac7SXoOYsb
      FRONTEND_URL: http://localhost:3000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      keycloak:
        condition: service_started
    volumes:
      - ./.env:/app/.env:ro
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:4000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s

volumes:
  postgres_data:
  redis_data:
  keycloak_data:
